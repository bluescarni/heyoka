name: GitHub CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  osx_13_x86:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: bash tools/gha_osx_x86.sh
  osx_13_static_x86:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: bash tools/gha_osx_x86_static.sh
  osx_14_static_arm64:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: bash tools/gha_osx_arm64_static.sh
  windows_2022_llvm_latest:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          # See: https://github.com/conda-incubator/setup-miniconda?tab=readme-ov-file#example-14-remove-defaults-channel
          conda-remove-defaults: "true"
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Build
        shell: pwsh
        run: |
          conda install -y cmake llvmdev tbb-devel tbb libboost-devel xtensor xtensor-blas blas blas-devel fmt spdlog sleef zlib libzlib "mppp=2.*" openssl
          mkdir build
          cd build
          cmake ../ -G "Visual Studio 17 2022" -A x64 -DHEYOKA_BUILD_TESTS=yes -DHEYOKA_WITH_MPPP=yes -DHEYOKA_BUILD_TUTORIALS=ON -DHEYOKA_ENABLE_IPO=yes -DHEYOKA_WITH_SLEEF=yes
          cmake --build . --config Release -j2
          copy Release\heyoka.dll test\Release\
          ctest -j4 -V -C Release
  conda_release_static:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: bash tools/gha_conda_release_static.sh
  conda_clang_tidy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: bash tools/gha_conda_clang_tidy.sh
  conda_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: bash tools/gha_conda_release.sh
  conda_coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: bash tools/gha_conda_coverage.sh
      - uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: ./build/coverage.info
          token: ${{ secrets.CODECOV_TOKEN }}
  conda_ubsan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: bash tools/gha_conda_ubsan.sh
  conda_asan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: bash tools/gha_conda_asan.sh
      # Upload the docs.
      - uses: actions/upload-artifact@v4
        with:
          name: docs
          path: doc/_build/html
  conda_llvm19_asan:
    runs-on: ubuntu-latest
    env:
      LLVM_VERSION: 19
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: bash tools/gha_llvm_n_conda_asan.sh
  conda_llvm18_asan:
    runs-on: ubuntu-latest
    env:
      LLVM_VERSION: 18
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: bash tools/gha_llvm_n_conda_asan.sh
  conda_llvm17_asan:
    runs-on: ubuntu-latest
    env:
      LLVM_VERSION: 17
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: bash tools/gha_llvm_n_conda_asan.sh
  conda_llvm16_asan:
    runs-on: ubuntu-latest
    env:
      LLVM_VERSION: 16
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: bash tools/gha_llvm_n_conda_asan.sh
