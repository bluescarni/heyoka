// Copyright 2020-2025 Francesco Biscani (bluescarni@gmail.com), Dario Izzo (dario.izzo@gmail.com)
//
// This file is part of the heyoka library.
//
// This Source Code Form is subject to the terms of the Mozilla
// Public License v. 2.0. If a copy of the MPL was not distributed
// with this file, You can obtain one at http://mozilla.org/MPL/2.0/.

#include <cstddef>
#include <cstdint>

#include <heyoka/config.hpp>
#include <heyoka/detail/iau2006/s.hpp>
#include <heyoka/mdspan.hpp>

HEYOKA_BEGIN_NAMESPACE

namespace model::detail
{

namespace
{

const std::int8_t iau2006_s_args_idxs_data_0[462ul] = {
    0,  0, 0,  0, 1,  0, 0,  0, 0, 0,  0, 0,  0, 0,  0,  0, 0,  0,  2,  0,   0,  0, 0, 0,  0,  0,  0,  0,  0,  0, 2,
    -2, 3, 0,  0, 0,  0, 0,  0, 0, 0,  0, 0,  0, 2,  -2, 1, 0,  0,  0,  0,   0,  0, 0, 0,  0,  0,  0,  2,  -2, 2, 0,
    0,  0, 0,  0, 0,  0, 0,  0, 0, 0,  2, 0,  3, 0,  0,  0, 0,  0,  0,  0,   0,  0, 0, 0,  2,  0,  1,  0,  0,  0, 0,
    0,  0, 0,  0, 0,  0, 0,  0, 0, 3,  0, 0,  0, 0,  0,  0, 0,  0,  0,  0,   1,  0, 0, 1,  0,  0,  0,  0,  0,  0, 0,
    0,  0, 0,  1, 0,  0, -1, 0, 0, 0,  0, 0,  0, 0,  0,  0, 1,  0,  0,  0,   -1, 0, 0, 0,  0,  0,  0,  0,  0,  0, 1,
    0,  0, 0,  1, 0,  0, 0,  0, 0, 0,  0, 0,  0, 0,  1,  2, -2, 3,  0,  0,   0,  0, 0, 0,  0,  0,  0,  0,  1,  2, -2,
    1,  0, 0,  0, 0,  0, 0,  0, 0, 0,  0, 0,  4, -4, 4,  0, 0,  0,  0,  0,   0,  0, 0, 0,  0,  0,  1,  -1, 1,  0, -8,
    12, 0, 0,  0, 0,  0, 0,  0, 0, 2,  0, 0,  0, 0,  0,  0, 0,  0,  0,  0,   0,  0, 0, 2,  0,  2,  0,  0,  0,  0, 0,
    0,  0, 0,  0, 1,  0, 2,  0, 3, 0,  0, 0,  0, 0,  0,  0, 0,  0,  1,  0,   2,  0, 1, 0,  0,  0,  0,  0,  0,  0, 0,
    0,  0, 0,  2, -2, 0, 0,  0, 0, 0,  0, 0,  0, 0,  0,  0, 1,  -2, 2,  -3,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0, 1,
    -2, 2, -1, 0, 0,  0, 0,  0, 0, 0,  0, 0,  0, 0,  0,  0, 0,  0,  8,  -13, 0,  0, 0, 0,  0,  -1, 0,  0,  0,  2, 0,
    0,  0, 0,  0, 0,  0, 0,  0, 0, 2,  0, -2, 0, -1, 0,  0, 0,  0,  0,  0,   0,  0, 0, 0,  1,  2,  -2, 2,  0,  0, 0,
    0,  0, 0,  0, 0,  0, 1,  0, 0, -2, 1, 0,  0, 0,  0,  0, 0,  0,  0,  0,   1,  0, 0, -2, -1, 0,  0,  0,  0,  0, 0,
    0,  0, 0,  0, 0,  4, -2, 4, 0, 0,  0, 0,  0, 0,  0,  0, 0,  0,  0,  2,   -2, 4, 0, 0,  0,  0,  0,  0,  0,  0, 0,
    1,  0, -2, 0, -3, 0, 0,  0, 0, 0,  0, 0,  0, 0,  1,  0, -2, 0,  -1, 0,   0,  0, 0, 0,  0,  0,  0,  0,
};

const double iau2006_s_args_cfs_data_0[66ul] = {
    -2640.73, 0.39, -63.53, 0.02, -11.75, -0.01, -11.21, -0.01, 4.57,  0.00, -2.02, 0.00, -1.98, 0.00,
    1.72,     0.00, 1.41,   0.01, 1.26,   0.01,  0.63,   0.00,  0.63,  0.00, -0.46, 0.00, -0.45, 0.00,
    -0.36,    0.00, 0.24,   0.12, -0.32,  0.00,  -0.28,  0.00,  -0.27, 0.00, -0.26, 0.00, 0.21,  0.00,
    -0.19,    0.00, -0.18,  0.00, 0.10,   -0.05, -0.15,  0.00,  0.14,  0.00, 0.14,  0.00, -0.14, 0.00,
    -0.14,    0.00, -0.13,  0.00, 0.11,   0.00,  -0.11,  0.00,  -0.11, 0.00,
};

const std::int8_t iau2006_s_args_idxs_data_1[42ul] = {
    0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 2, -2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
};

const double iau2006_s_args_cfs_data_1[6ul] = {
    -0.07, 3.57, 1.73, -0.03, 0.00, 0.48,
};

const std::int8_t iau2006_s_args_idxs_data_2[350ul] = {
    0, 0, 0,  0,  1,  0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 2, -2, 2,  0, 0, 0, 0, 0,  0, 0,  0, 0, 0, 0, 2,  0, 2,  0, 0,
    0, 0, 0,  0,  0,  0, 0, 0, 0, 0, 0,  2, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0, 1, 0,  0, 0,  0, 0, 0, 0, 0,  0, 0,  0, 0,
    1, 0, 0,  0,  0,  0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 1, 2, -2, 2,  0, 0, 0, 0, 0,  0, 0,  0, 0, 0, 0, 2,  0, 1,  0, 0,
    0, 0, 0,  0,  0,  0, 0, 1, 0, 2, 0,  2, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0, 1, -2, 2, -2, 0, 0, 0, 0, 0,  0, 0,  0, 0,
    1, 0, 0,  -2, 0,  0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 2, -2, 1,  0, 0, 0, 0, 0,  0, 0,  0, 0, 1, 0, -2, 0, -2, 0, 0,
    0, 0, 0,  0,  0,  0, 0, 0, 0, 0, 2,  0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 1, 0, 0,  0, 1,  0, 0, 0, 0, 0,  0, 0,  0, 0,
    1, 0, -2, -2, -2, 0, 0, 0, 0, 0, 0,  0, 0, 0, 1, 0, 0, 0,  -1, 0, 0, 0, 0, 0,  0, 0,  0, 0, 1, 0, 2,  0, 1,  0, 0,
    0, 0, 0,  0,  0,  0, 0, 2, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 2, 0, -2, 0, -1, 0, 0, 0, 0, 0,  0, 0,  0, 0,
    0, 0, 2,  2,  2,  0, 0, 0, 0, 0, 0,  0, 0, 0, 2, 0, 2, 0,  2,  0, 0, 0, 0, 0,  0, 0,  0, 0, 2, 0, 0,  0, 0,  0, 0,
    0, 0, 0,  0,  0,  0, 0, 1, 0, 2, -2, 2, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0, 0, 2,  0, 0,  0, 0, 0, 0, 0,  0, 0,  0, 0,
};

const double iau2006_s_args_cfs_data_2[50ul] = {
    743.52, -0.17, 56.91, 0.06, 9.84, -0.01, -8.85, 0.01, -6.38, -0.05, -3.07, 0.00,  2.23,  0.00,  1.67,  0.00,  1.30,
    0.00,   0.93,  0.00,  0.68, 0.00, -0.55, 0.00,  0.53, 0.00,  -0.27, 0.00,  -0.27, 0.00,  -0.26, 0.00,  -0.25, 0.00,
    0.22,   0.00,  -0.21, 0.00, 0.20, 0.00,  0.17,  0.00, 0.13,  0.00,  -0.13, 0.00,  -0.12, 0.00,  -0.11, 0.00,
};

const std::int8_t iau2006_s_args_idxs_data_3[56ul] = {
    0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, -2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
};

const double iau2006_s_args_cfs_data_3[8ul] = {
    0.30, -23.42, -0.03, -1.46, -0.01, -0.25, 0.00, 0.23,
};

const std::int8_t iau2006_s_args_idxs_data_4[14ul] = {
    0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
};

const double iau2006_s_args_cfs_data_4[2ul] = {
    -0.26,
    -0.01,
};

} // namespace

// NOLINTBEGIN(cert-err58-cpp)
const mdspan<const std::int8_t, extents<std::size_t, 33, 14>> iau2006_s_args_idxs_0(iau2006_s_args_idxs_data_0);
const mdspan<const double, extents<std::size_t, 33, 2>> iau2006_s_cfs_0(iau2006_s_args_cfs_data_0);

const mdspan<const std::int8_t, extents<std::size_t, 3, 14>> iau2006_s_args_idxs_1(iau2006_s_args_idxs_data_1);
const mdspan<const double, extents<std::size_t, 3, 2>> iau2006_s_cfs_1(iau2006_s_args_cfs_data_1);

const mdspan<const std::int8_t, extents<std::size_t, 25, 14>> iau2006_s_args_idxs_2(iau2006_s_args_idxs_data_2);
const mdspan<const double, extents<std::size_t, 25, 2>> iau2006_s_cfs_2(iau2006_s_args_cfs_data_2);

const mdspan<const std::int8_t, extents<std::size_t, 4, 14>> iau2006_s_args_idxs_3(iau2006_s_args_idxs_data_3);
const mdspan<const double, extents<std::size_t, 4, 2>> iau2006_s_cfs_3(iau2006_s_args_cfs_data_3);

const mdspan<const std::int8_t, extents<std::size_t, 1, 14>> iau2006_s_args_idxs_4(iau2006_s_args_idxs_data_4);
const mdspan<const double, extents<std::size_t, 1, 2>> iau2006_s_cfs_4(iau2006_s_args_cfs_data_4);
// NOLINTEND(cert-err58-cpp)

} // namespace model::detail

HEYOKA_END_NAMESPACE
