# Remember several build options.
set(heyoka_WITH_SLEEF @HEYOKA_WITH_SLEEF@)
set(heyoka_WITH_MPPP @HEYOKA_WITH_MPPP@)
set(heyoka_WITH_REAL128 @_HEYOKA_WITH_REAL128@)
set(heyoka_WITH_REAL @_HEYOKA_WITH_REAL@)
set(heyoka_ABI_VERSION @HEYOKA_ABI_VERSION@)

# Mandatory public dependencies on Boost and fmt.
find_package(Boost @_HEYOKA_MIN_BOOST_VERSION@ REQUIRED serialization)
find_package(fmt REQUIRED CONFIG)
if(NOT ${fmt_VERSION_MAJOR} IN_LIST "@_HEYOKA_SUPPORTED_FMT_VERSIONS@")
    message(FATAL_ERROR "The supported fmt versions are (@_HEYOKA_SUPPORTED_FMT_VERSIONS@), but version ${fmt_VERSION_MAJOR} was found instead.")
endif()

# Optional public dependency on mp++.
if(${heyoka_WITH_MPPP})
    find_package(mp++ @_HEYOKA_MPPP_VERSION@ REQUIRED CONFIG)

    # NOTE: this is necessary for the serialisation of several classes.
    if(NOT mp++_WITH_BOOST_S11N)
        message(FATAL_ERROR "mp++ must be installed with support for Boost.serialization.")
    endif()

    # NOTE: needed for formatting numbers.
    if(NOT mp++_WITH_FMT)
        message(FATAL_ERROR "mp++ must be installed with support for fmt.")
    endif()
endif()

# Record the LLVM major version against which
# heyoka was built.
set(heyoka_LLVM_VERSION_MAJOR @LLVM_VERSION_MAJOR@)

# Get current dir.
get_filename_component(_HEYOKA_CONFIG_SELF_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

include(${_HEYOKA_CONFIG_SELF_DIR}/heyoka_export.cmake)

# Clean up.
unset(_HEYOKA_CONFIG_SELF_DIR)
